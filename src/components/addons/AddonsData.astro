// AddonsData.jsx
import React from 'react';

const AddonsData = ({ addons, isCardView, selectedIds, toggleSelection, toggleSelectAll }) => {

    const formatDate = (dateString) => {
        const date = new Date(dateString);
        const now = new Date();
        const diffDays = Math.floor((now - date) / (1000 * 60 * 60 * 24));
        if (diffDays === 0) return 'H√¥m nay';
        if (diffDays === 1) return 'H√¥m qua';
        if (diffDays < 7) return `${diffDays} ng√†y tr∆∞·ªõc`;
        if (diffDays < 30) return `${Math.floor(diffDays / 7)} tu·∫ßn tr∆∞·ªõc`;
        return `${Math.floor(diffDays / 30)} th√°ng tr∆∞·ªõc`;
    };

    const getPopularity = (likes) => {
        if (likes >= 10000) return { class: 'hot', icon: 'üî•' };
        if (likes >= 5000) return { class: 'popular', icon: '‚≠ê' };
        if (likes >= 1000) return { class: 'good', icon: 'üëç' };
        return { class: 'new', icon: '‚ú®' };
    };

    const renderTableItem = (addon) => {
        const isSelected = selectedIds.has(addon.id);
        const popularity = getPopularity(addon.likes);
        return (
            <div
                key={addon.id}
                className={`addon-item ${isSelected ? 'selected' : ''}`}
                onClick={() => toggleSelection(addon.id, !isSelected)}
            >
                <div className="item-select">
                    <input
                        type="checkbox"
                        className="item-checkbox"
                        checked={isSelected}
                        onChange={(e) => e.stopPropagation()}
                    />
                </div>
                <div className="item-content">
                    <div className="item-main">
                        <h3 className="item-title">
                            <a href={addon.link} target="_blank" rel="noopener" onClick={(e) => e.stopPropagation()}>{addon.title}</a>
                        </h3>
                        <div className="item-meta">
                            <div className="meta-item">
                                <span className="meta-icon">‚ù§Ô∏è</span>
                                <span className="likes-count">{addon.likes.toLocaleString()}</span>
                            </div>
                            <div className="meta-item">
                                <span className="meta-icon">üìÖ</span>
                                <span className="date-modified">{formatDate(addon.modified)}</span>
                            </div>
                            <div className="meta-item">
                                <span className="meta-icon">üíª</span>
                                <span className="version-badge">{addon.version || 'N/A'}</span>
                            </div>
                        </div>
                    </div>
                    <div className="item-actions">
                        <button className="item-btn" onClick={(e) => { e.stopPropagation(); window.open(addon.link, '_blank'); }}>
                            <span>üîó</span> Xem chi ti·∫øt
                        </button>
                    </div>
                </div>
                <div className={`popularity-indicator popularity-${popularity.class}`}>
                    {popularity.icon} {popularity.class.toUpperCase()}
                </div>
            </div>
        );
    };

    const renderCard = (addon) => {
        const isSelected = selectedIds.has(addon.id);
        const popularity = getPopularity(addon.likes);
        return (
            <div
                key={addon.id}
                className={`addon-card ${isSelected ? 'selected' : ''}`}
                onClick={() => toggleSelection(addon.id, !isSelected)}
            >
                <div className="card-header">
                    <input
                        type="checkbox"
                        className="card-checkbox"
                        checked={isSelected}
                        onChange={(e) => e.stopPropagation()}
                    />
                    <div className={`popularity ${popularity.class}`}>{popularity.icon} {popularity.class.toUpperCase()}</div>
                </div>
                <h3 className="card-title">
                    <a href={addon.link} target="_blank" rel="noopener" onClick={(e) => e.stopPropagation()}>{addon.title}</a>
                </h3>
                <div className="card-stats">
                    <div className="stat">
                        <span className="stat-icon">‚ù§Ô∏è</span>
                        <span className="stat-value">{addon.likes.toLocaleString()}</span>
                        <span className="stat-label">L∆∞·ª£t th√≠ch</span>
                    </div>
                    <div className="stat">
                        <span className="stat-icon">üìÖ</span>
                        <span className="stat-value">{formatDate(addon.modified)}</span>
                        <span className="stat-label">C·∫≠p nh·∫≠t</span>
                    </div>
                    <div className="stat">
                        <span className="stat-icon">üíª</span>
                        <span className="stat-value">{addon.version || 'N/A'}</span>
                        <span className="stat-label">Phi√™n b·∫£n</span>
                    </div>
                    <div className="stat">
                        <span className="stat-icon">üìà</span>
                        <span className="stat-value">{addon.total.toLocaleString()}</span>
                        <span className="stat-label">T·∫£i xu·ªëng</span>
                    </div>
                </div>
                <div className="card-footer">
                    <a href={addon.link} target="_blank" rel="noopener" className="card-btn primary" onClick={(e) => e.stopPropagation()}>üîó Chi ti·∫øt</a>
                    <button className="card-btn secondary" onClick={(e) => {
                        e.stopPropagation();
                        navigator.clipboard.writeText(addon.link);
                        alert('ƒê√£ copy link: ' + addon.link);
                    }}>üìã Copy link</button>
                </div>
            </div>
        );
    };

    return (
        <div className={isCardView ? "card-grid" : "addon-list"}>
            {addons.map(addon => isCardView ? renderCard(addon) : renderTableItem(addon))}
        </div>
    );
};

export default AddonsData;
